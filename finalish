Last login: Mon May 28 15:30:55 on ttys000
Emmas-MacBook-Air:~ taumoepeau$ ssh pi@10.140.30.70
pi@10.140.30.70's password: 

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Mon May 28 03:17:06 2018
pi@raspberrypi:~ $ cd E101/LibE101/
pi@raspberrypi:~/E101/LibE101 $ 
pi@raspberrypi:~/E101/LibE101 $ ls
sass05.cpp  ass5.o           assignment5.o  cameracontrol.cpp  camera.cpp  E101.h       makefile   maze.cpp        random.cpp  sensor      sensorTest.cpp  start.o  tester.cpp
ass5       assignment5      attempt        cameracontrol.h    camera.h    gittest.cpp  makefile~  mmalincludes.h  red         sensor.cpp  start.cpp       stc.sh   tester.cpp.save
ass5.cpp   assignment5.cpp  attempt.cpp    cameracontrol.o    camera.o    libe101.so   maze       practice.cpp    red.cpp     sensorTest  start.cpp~      tester   tester.o
pi@raspberrypi:~/E101/LibE101 $ sudo ./tester
Init camera output with 320/240
Creating pool with 3 buffers of size 307200
Camera successfully created
Gate opened 
All Black
All Black
All Black
All Black
All Black
All Black
First time
All Black
^[[A^[[BAll Black
All Black
^C2018-05-28 04:04:17 sigHandler: Unhandled signal 2, terminating

pi@raspberrypi:~/E101/LibE101 $ sudo ./tester
Init camera output with 320/240
Creating pool with 3 buffers of size 307200
Camera successfully created
Gate opened 
First time
All Black
Intersection
Intersection
All Black
Intersection
Intersection
Intersection
All Black
Intersection
All Black
All Black
All Black
All Black
All Black
Intersection
Intersection
FUCKNext quad 
Front: 131	Right: 652	Left: 495
Front: 81	Right: 660	Left: 476
Front: 102	Right: 660	Left: 485
Front: 59	Right: 647	Left: 538
Front: 61	Right: 561	Left: 542
Front: 169	Right: 416	Left: 554
Front: 211	Right: 353	Left: 571
Front: 218	Right: 350	Left: 627
Front: 191	Right: 380	Left: 655
Front: 170	Right: 401	Left: 659
Front: 158	Right: 415	Left: 655
Front: 117	Right: 432	Left: 626
Front: 97	Right: 448	Left: 644
Front: 67	Right: 457	Left: 647
Front: 68	Right: 468	Left: 652
Front: 58	Right: 481	Left: 660
Front: 59	Right: 491	Left: 660
Front: 124	Right: 507	Left: 650
Front: 99	Right: 516	Left: 636
Front: 90	Right: 523	Left: 564
Front: 111	Right: 537	Left: 501
Front: 126	Right: 554	Left: 487
Front: 90	Right: 583	Left: 550
Front: 98	Right: 584	Left: 574
Front: 129	Right: 547	Left: 627
Front: 63	Right: 504	Left: 647
Front: 77	Right: 509	Left: 652
Front: 71	Right: 554	Left: 634
Front: 70	Right: 575	Left: 590
Front: 97	Right: 589	Left: 523
Front: 110	Right: 614	Left: 492
Front: 130	Right: 629	Left: 525
Front: 60	Right: 606	Left: 573
Front: 80	Right: 520	Left: 612
Front: 113	Right: 483	Left: 652
Front: 96	Right: 493	Left: 650
Front: 76	Right: 568	Left: 649
Front: 67	Right: 558	Left: 620
Front: 65	Right: 587	Left: 566
Front: 98	Right: 606	Left: 535
Front: 64	Right: 603	Left: 583
Front: 82	Right: 555	Left: 620
Front: 81	Right: 513	Left: 641
Front: 84	Right: 580	Left: 645
Front: 82	Right: 554	Left: 628
Front: 67	Right: 578	Left: 583
Front: 98	Right: 615	Left: 524
Front: 117	Right: 632	Left: 495
Front: 69	Right: 642	Left: 532
Front: 71	Right: 612	Left: 581
Front: 90	Right: 534	Left: 617
Front: 111	Right: 464	Left: 647
Front: 155	Right: 462	Left: 660
Front: 90	Right: 479	Left: 659
Front: 91	Right: 513	Left: 660
Front: 81	Right: 544	Left: 638
Front: 58	Right: 570	Left: 561
Front: 90	Right: 594	Left: 525
Front: 78	Right: 602	Left: 570
Front: 92	Right: 568	Left: 619
Front: 104	Right: 531	Left: 645
Front: 130	Right: 542	Left: 641
Front: 94	Right: 578	Left: 614
Front: 83	Right: 666	Left: 627
Front: 81	Right: 630	Left: 524
Front: 85	Right: 618	Left: 575
Front: 103	Right: 582	Left: 612
Front: 111	Right: 535	Left: 631
Front: 119	Right: 548	Left: 659
Front: 107	Right: 612	Left: 622
Front: 103	Right: 609	Left: 632
Front: 162	Right: 635	Left: 478
Front: 91	Right: 652	Left: 453
Front: 99	Right: 660	Left: 503
Front: 108	Right: 659	Left: 524
Front: 120	Right: 619	Left: 577
Front: 133	Right: 490	Left: 607
Front: 189	Right: 389	Left: 637
Front: 183	Right: 386	Left: 657
Front: 185	Right: 494	Left: 623
Front: 155	Right: 450	Left: 604
Front: 147	Right: 482	Left: 626
Front: 140	Right: 515	Left: 659
Front: 140	Right: 532	Left: 663
Front: 144	Right: 545	Left: 556
Front: 138	Right: 558	Left: 427
Front: 140	Right: 602	Left: 384
Front: 149	Right: 661	Left: 450
Front: 167	Right: 658	Left: 472
Front: 186	Right: 195	Left: 514
Front: 199	Right: 88	Left: 545
Front: 216	Right: 65	Left: 548
Front: 231	Right: 68	Left: 525
Front: 301	Right: 71	Left: 483
Front: 252	Right: 65	Left: 441
Front: 253	Right: 60	Left: 342
Front: 237	Right: 157	Left: 252
Front: 212	Right: 526	Left: 257
Front: 190	Right: 619	Left: 318
Front: 119	Right: 647	Left: 359
Front: 170	Right: 54	Left: 360
Front: 236	Right: 35	Left: 367
Front: 288	Right: 45	Left: 436
Front: 212	Right: 21	Left: 544
Front: 144	Right: 13	Left: 616
Front: 187	Right: 3	Left: 658
Front: 183	Right: 127	Left: 653
Front: 192	Right: 350	Left: 605
Front: 199	Right: 626	Left: 502
Front: 200	Right: 644	Left: 427
Front: 221	Right: 334	Left: 453
Front: 245	Right: 144	Left: 461
Front: 253	Right: 178	Left: 418
Front: 257	Right: 265	Left: 454
Front: 251	Right: 422	Left: 274
Front: 233	Right: 451	Left: 244
Front: 207	Right: 553	Left: 364
Front: 183	Right: 550	Left: 356
Front: 226	Right: 420	Left: 348
Front: 290	Right: 284	Left: 320
Front: 340	Right: 215	Left: 325
Front: 361	Right: 291	Left: 406
Front: 341	Right: 273	Left: 535
Front: 359	Right: 315	Left: 661
Front: 228	Right: 354	Left: 578
Front: 183	Right: 390	Left: 464
Front: 148	Right: 424	Left: 439
Front: 67	Right: 455	Left: 473
Front: 56	Right: 482	Left: 551
Front: 109	Right: 492	Left: 658
Front: 98	Right: 504	Left: 629
Front: 130	Right: 514	Left: 531
Front: 174	Right: 521	Left: 442
Front: 204	Right: 540	Left: 417
Front: 170	Right: 596	Left: 459
Front: 124	Right: 649	Left: 551
Front: 106	Right: 660	Left: 540
Front: 116	Right: 663	Left: 576
Front: 61	Right: 608	Left: 612
Front: 74	Right: 584	Left: 627
Front: 73	Right: 604	Left: 621
Front: 59	Right: 633	Left: 608
Front: 92	Right: 640	Left: 581
Front: 56	Right: 647	Left: 615
Front: 69	Right: 591	Left: 640
Front: 72	Right: 570	Left: 650
Front: 75	Right: 593	Left: 644
Front: 61	Right: 622	Left: 621
Front: 62	Right: 626	Left: 617
Front: 68	Right: 594	Left: 643
Front: 72	Right: 575	Left: 654
Front: 65	Right: 599	Left: 647
Front: 60	Right: 638	Left: 621
Front: 100	Right: 632	Left: 617
Front: 63	Right: 606	Left: 662
Front: 71	Right: 589	Left: 654
Front: 58	Right: 612	Left: 632
Front: 93	Right: 642	Left: 588
Front: 119	Right: 649	Left: 560
Front: 60	Right: 637	Left: 612
Front: 75	Right: 599	Left: 638
Front: 78	Right: 579	Left: 647
Front: 77	Right: 598	Left: 631
Front: 59	Right: 639	Left: 611
Front: 68	Right: 638	Left: 608
Front: 64	Right: 612	Left: 641
Front: 76	Right: 601	Left: 652
Front: 64	Right: 624	Left: 631
Front: 91	Right: 648	Left: 583
Front: 200	Right: 656	Left: 571
Front: 64	Right: 644	Left: 606
Front: 73	Right: 614	Left: 636
Front: 77	Right: 591	Left: 644
Front: 73	Right: 648	Left: 636
Front: 65	Right: 673	Left: 632
Front: 79	Right: 586	Left: 664
Front: 84	Right: 569	Left: 656
Front: 85	Right: 633	Left: 650
Front: 71	Right: 622	Left: 675
Front: 75	Right: 645	Left: 604
Front: 126	Right: 649	Left: 582
Front: 72	Right: 640	Left: 615
Front: 83	Right: 605	Left: 642
Front: 129	Right: 592	Left: 700
Front: 81	Right: 615	Left: 637
Front: 77	Right: 637	Left: 697
Front: 89	Right: 661	Left: 540
Front: 176	Right: 664	Left: 539
Front: 81	Right: 663	Left: 578
Front: 88	Right: 646	Left: 609
Front: 90	Right: 601	Left: 636
Front: 151	Right: 556	Left: 648
Front: 99	Right: 664	Left: 645
Front: 98	Right: 564	Left: 648
Front: 99	Right: 578	Left: 653
Front: 110	Right: 605	Left: 642
Front: 96	Right: 585	Left: 609
Front: 94	Right: 648	Left: 563
Front: 116	Right: 619	Left: 545
Front: 104	Right: 654	Left: 585
Front: 111	Right: 645	Left: 613
Front: 115	Right: 599	Left: 641
Front: 115	Right: 558	Left: 653
Front: 123	Right: 588	Left: 652
Front: 128	Right: 621	Left: 635
Front: 123	Right: 649	Left: 587
Front: 120	Right: 656	Left: 579
Front: 136	Right: 656	Left: 611
Front: 141	Right: 624	Left: 639
Front: 145	Right: 601	Left: 646
Front: 148	Right: 625	Left: 636
Front: 153	Right: 653	Left: 604
Front: 157	Right: 656	Left: 600
Front: 166	Right: 636	Left: 635
Front: 171	Right: 585	Left: 652
Front: 179	Right: 549	Left: 658
Front: 191	Right: 574	Left: 266
Front: 250	Right: 605	Left: 135
Front: 206	Right: 619	Left: 65
Front: 212	Right: 585	Left: 71
Front: 220	Right: 557	Left: 144
Front: 232	Right: 575	Left: 67
Front: 246	Right: 610	Left: 65
Front: 257	Right: 627	Left: 82
Front: 279	Right: 609	Left: 62
Front: 287	Right: 623	Left: 49
Front: 305	Right: 498	Left: 74
Front: 318	Right: 459	Left: 104
Front: 400	Right: 479	Left: 65
Front: 396	Right: 387	Left: 110
Front: 293	Right: 407	Left: 125
Front: 236	Right: 468	Left: 235
Front: 264	Right: 463	Left: 93
Front: 327	Right: 449	Left: 98
Front: 386	Right: 408	Left: 107
Front: 441	Right: 654	Left: 103
Front: 132	Right: 419	Left: 236
Front: 86	Right: 494	Left: 107
Front: 63	Right: 468	Left: 265
Front: 94	Right: 412	Left: 407
Front: 147	Right: 421	Left: 353
Front: 141	Right: 419	Left: 417
Front: 77	Right: 495	Left: 439
Front: 76	Right: 659	Left: 377
Front: 91	Right: 539	Left: 88
Front: 225	Right: 426	Left: 81
Front: 184	Right: 480	Left: 538
Front: 104	Right: 464	Left: 475
Front: 91	Right: 504	Left: 211
Front: 91	Right: 543	Left: 81
Front: 94	Right: 583	Left: 45
Front: 85	Right: 623	Left: 65
Front: 122	Right: 643	Left: 77
Front: 91	Right: 639	Left: 44
Front: 102	Right: 595	Left: 54
Front: 106	Right: 550	Left: 53
Front: 115	Right: 557	Left: 45
Front: 117	Right: 588	Left: 49
Front: 113	Right: 622	Left: 116
Front: 107	Right: 643	Left: 183
Front: 114	Right: 700	Left: 106
Front: 133	Right: 600	Left: 41
Front: 136	Right: 548	Left: 59
Front: 144	Right: 623	Left: 43
Front: 154	Right: 558	Left: 60
Front: 153	Right: 539	Left: 128
Front: 162	Right: 563	Left: 644
Front: 171	Right: 591	Left: 426
Front: 177	Right: 612	Left: 69
Front: 193	Right: 599	Left: 161
Front: 199	Right: 565	Left: 174
Front: 207	Right: 616	Left: 63
Front: 220	Right: 600	Left: 51
Front: 224	Right: 591	Left: 131
Front: 236	Right: 622	Left: 74
Front: 252	Right: 641	Left: 73
Front: 278	Right: 623	Left: 48
Front: 298	Right: 577	Left: 65
Front: 314	Right: 521	Left: 90
Front: 360	Right: 530	Left: 179
Front: 391	Right: 561	Left: 52
Front: 503	Right: 516	Left: 74
Front: 427	Right: 298	Left: 178
Front: 273	Right: 612	Left: 338
Front: 198	Right: 660	Left: 293
Front: 131	Right: 658	Left: 107
Front: 78	Right: 643	Left: 102
Front: 155	Right: 661	Left: 114
Front: 51	Right: 645	Left: 69
Front: 124	Right: 531	Left: 71
Front: 162	Right: 465	Left: 67
Front: 159	Right: 476	Left: 65
Front: 153	Right: 518	Left: 64
Front: 106	Right: 547	Left: 637
Front: 64	Right: 572	Left: 592
Front: 94	Right: 599	Left: 580
Front: 81	Right: 623	Left: 562
Front: 112	Right: 597	Left: 597
Front: 51	Right: 579	Left: 609
Front: 80	Right: 655	Left: 588
Front: 103	Right: 616	Left: 577
Front: 80	Right: 584	Left: 668
Front: 140	Right: 568	Left: 627
Front: 115	Right: 584	Left: 615
Front: 69	Right: 614	Left: 573
Front: 64	Right: 623	Left: 563
Front: 84	Right: 603	Left: 604
Front: 119	Right: 583	Left: 614
Front: 103	Right: 602	Left: 594
Front: 85	Right: 623	Left: 565
Front: 68	Right: 140	Left: 486
Front: 126	Right: 43	Left: 149
Front: 77	Right: 8	Left: 68
Front: 13	Right: 3	Left: 26
Front: 98	Right: 4	Left: 26
Front: 43	Right: 3	Left: 34
Front: 4	Right: 18	Left: 14
Front: 6	Right: 3	Left: 31
Front: 4	Right: 3	Left: 34
Front: 6	Right: 6	Left: 10
Front: 39	Right: 3	Left: 39
Front: 11	Right: 4	Left: 26
Front: 79	Right: 64	Left: 35
Front: 4	Right: 81	Left: 10
Front: 7	Right: 14	Left: 87
Front: 77	Right: 43	Left: 87
Front: 8	Right: 3	Left: 76
Front: 3	Right: 3	Left: 81
Front: 4	Right: 4	Left: 102
Front: 4	Right: 10	Left: 102
Front: 53	Right: 3	Left: 228
Front: 56	Right: 5	Left: 116
Front: 56	Right: 3	Left: 111
Front: 3	Right: 13	Left: 160
Front: 8	Right: 3	Left: 210
Front: 8	Right: 3	Left: 142
Front: 4	Right: 3	Left: 79
Front: 5	Right: 4	Left: 222
Front: 3	Right: 5	Left: 110
Front: 4	Right: 3	Left: 70
Front: 4	Right: 40	Left: 42
Front: 6	Right: 3	Left: 82
Front: 3	Right: 6	Left: 11
Front: 3	Right: 3	Left: 125
Front: 4	Right: 3	Left: 81
Front: 4	Right: 4	Left: 107
Front: 4	Right: 3	Left: 141
Front: 4	Right: 3	Left: 102
Front: 6	Right: 60	Left: 94
Front: 3	Right: 6	Left: 94
Front: 58	Right: 4	Left: 103
Front: 4	Right: 6	Left: 107
Front: 7	Right: 3	Left: 127
Front: 4	Right: 6	Left: 116
Front: 4	Right: 62	Left: 114
Front: 4	Right: 11	Left: 142
Front: 4	Right: 4	Left: 117
^C2018-05-28 04:06:59 sigHandler: Unhandled signal 2, terminating

pi@raspberrypi:~/E101/LibE101 $ sudo ./tester
Init camera output with 320/240
Creating pool with 3 buffers of size 307200
Camera successfully created
Gate opened 
All Black
^C2018-05-28 04:07:53 sigHandler: Unhandled signal 2, terminating

pi@raspberrypi:~/E101/LibE101 $ sudo ./tester
Init camera output with 320/240
Creating pool with 3 buffers of size 307200
Camera successfully created
Gate opened 
First time
All Black
Intersection
Intersection
Intersection
FUCKNext quad 
Front: 77	Right: 545	Left: 611
Front: 123	Right: 520	Left: 634
Front: 52	Right: 552	Left: 616
Front: 99	Right: 585	Left: 554
Front: 90	Right: 611	Left: 500
Front: 84	Right: 626	Left: 519
Front: 76	Right: 608	Left: 559
Front: 63	Right: 640	Left: 592
Front: 123	Right: 498	Left: 619
Front: 145	Right: 453	Left: 641
Front: 133	Right: 464	Left: 653
Front: 77	Right: 494	Left: 653
Front: 69	Right: 515	Left: 652
Front: 68	Right: 533	Left: 641
Front: 60	Right: 547	Left: 641
Front: 93	Right: 557	Left: 593
Front: 87	Right: 580	Left: 542
Front: 100	Right: 602	Left: 520
Front: 109	Right: 682	Left: 560
Front: 60	Right: 576	Left: 603
Front: 72	Right: 531	Left: 628
Front: 72	Right: 536	Left: 631
Front: 94	Right: 608	Left: 610
Front: 79	Right: 592	Left: 570
Front: 94	Right: 613	Left: 539
Front: 59	Right: 604	Left: 579
Front: 77	Right: 520	Left: 617
Front: 63	Right: 499	Left: 641
Front: 72	Right: 484	Left: 653
Front: 77	Right: 538	Left: 640
Front: 63	Right: 564	Left: 608
Front: 107	Right: 590	Left: 546
Front: 99	Right: 611	Left: 511
Front: 109	Right: 619	Left: 555
Front: 64	Right: 581	Left: 598
Front: 79	Right: 548	Left: 619
Front: 94	Right: 555	Left: 622
Front: 75	Right: 588	Left: 594
Front: 61	Right: 619	Left: 546
Front: 107	Right: 656	Left: 531
Front: 65	Right: 621	Left: 656
Front: 146	Right: 605	Left: 580
Front: 77	Right: 596	Left: 592
Front: 89	Right: 536	Left: 631
Front: 76	Right: 495	Left: 642
Front: 85	Right: 513	Left: 646
Front: 85	Right: 543	Left: 645
Front: 76	Right: 576	Left: 608
Front: 63	Right: 670	Left: 548
Front: 188	Right: 623	Left: 518
Front: 69	Right: 624	Left: 559
Front: 94	Right: 586	Left: 600
Front: 94	Right: 545	Left: 628
Front: 98	Right: 550	Left: 631
Front: 110	Right: 666	Left: 604
Front: 80	Right: 604	Left: 639
Front: 86	Right: 602	Left: 587
Front: 86	Right: 602	Left: 587
Front: 99	Right: 566	Left: 618
Front: 108	Right: 523	Left: 645
Front: 110	Right: 527	Left: 643
Front: 98	Right: 561	Left: 634
Front: 97	Right: 592	Left: 600
Front: 86	Right: 617	Left: 534
Front: 83	Right: 636	Left: 587
Front: 94	Right: 641	Left: 543
Front: 102	Right: 596	Left: 592
Front: 120	Right: 523	Left: 626
Front: 97	Right: 444	Left: 656
Front: 100	Right: 437	Left: 660
Front: 124	Right: 463	Left: 647
Front: 128	Right: 510	Left: 651
Front: 119	Right: 516	Left: 676
Front: 119	Right: 543	Left: 628
Front: 116	Right: 569	Left: 519
Front: 116	Right: 592	Left: 477
Front: 119	Right: 633	Left: 509
Front: 127	Right: 640	Left: 562
Front: 136	Right: 594	Left: 613
Front: 159	Right: 530	Left: 652
Front: 163	Right: 524	Left: 656
Front: 162	Right: 555	Left: 652
Front: 167	Right: 590	Left: 639
Front: 171	Right: 612	Left: 567
Front: 201	Right: 691	Left: 518
Front: 187	Right: 615	Left: 555
Front: 203	Right: 66	Left: 603
Front: 213	Right: 60	Left: 628
Front: 226	Right: 70	Left: 631
Front: 237	Right: 64	Left: 601
Front: 254	Right: 64	Left: 547
Front: 267	Right: 60	Left: 465
Front: 264	Right: 53	Left: 391
Front: 257	Right: 78	Left: 293
Front: 229	Right: 441	Left: 271
Front: 211	Right: 514	Left: 340
Front: 166	Right: 538	Left: 388
Front: 207	Right: 73	Left: 395
Front: 265	Right: 30	Left: 406
Front: 270	Right: 25	Left: 488
Front: 221	Right: 17	Left: 618
Front: 140	Right: 60	Left: 727
Front: 186	Right: 289	Left: 649
Front: 174	Right: 509	Left: 656
Front: 178	Right: 552	Left: 643
Front: 186	Right: 592	Left: 508
Front: 187	Right: 626	Left: 436
Front: 199	Right: 599	Left: 454
Front: 220	Right: 152	Left: 495
Front: 247	Right: 5	Left: 521
Front: 264	Right: 3	Left: 608
Front: 280	Right: 116	Left: 432
Front: 278	Right: 203	Left: 354
Front: 295	Right: 302	Left: 275
Front: 254	Right: 379	Left: 265
Front: 224	Right: 479	Left: 345
Front: 199	Right: 483	Left: 384
Front: 231	Right: 376	Left: 380
Front: 278	Right: 315	Left: 388
Front: 273	Right: 337	Left: 465
Front: 245	Right: 373	Left: 543
Front: 206	Right: 411	Left: 634
Front: 170	Right: 457	Left: 660
Front: 107	Right: 492	Left: 668
Front: 67	Right: 530	Left: 660
Front: 60	Right: 565	Left: 655
Front: 116	Right: 586	Left: 619
Front: 90	Right: 612	Left: 547
Front: 108	Right: 635	Left: 521
Front: 90	Right: 631	Left: 579
Front: 111	Right: 628	Left: 602
Front: 58	Right: 601	Left: 627
Front: 68	Right: 583	Left: 640
Front: 55	Right: 606	Left: 619
Front: 95	Right: 632	Left: 591
Front: 115	Right: 644	Left: 578
Front: 65	Right: 630	Left: 616
Front: 60	Right: 601	Left: 639
Front: 76	Right: 583	Left: 648
Front: 60	Right: 611	Left: 642
Front: 58	Right: 630	Left: 608
Front: 104	Right: 637	Left: 598
Front: 58	Right: 597	Left: 628
Front: 61	Right: 599	Left: 630
Front: 54	Right: 620	Left: 603
Front: 90	Right: 625	Left: 600
Front: 54	Right: 619	Left: 631
Front: 91	Right: 603	Left: 635
Front: 61	Right: 637	Left: 626
Front: 74	Right: 643	Left: 612
Front: 60	Right: 615	Left: 670
Front: 75	Right: 609	Left: 638
Front: 57	Right: 637	Left: 613
Front: 78	Right: 648	Left: 601
Front: 59	Right: 621	Left: 719
Front: 69	Right: 608	Left: 652
Front: 59	Right: 641	Left: 610
Front: 67	Right: 647	Left: 605
Front: 60	Right: 616	Left: 651
Front: 68	Right: 601	Left: 640
Front: 59	Right: 635	Left: 588
Front: 58	Right: 664	Left: 609
Front: 68	Right: 608	Left: 644
Front: 79	Right: 589	Left: 659
Front: 64	Right: 623	Left: 594
Front: 73	Right: 625	Left: 619
Front: 68	Right: 595	Left: 632
Front: 71	Right: 583	Left: 719
Front: 64	Right: 615	Left: 640
Front: 59	Right: 637	Left: 607
Front: 95	Right: 646	Left: 593
Front: 59	Right: 619	Left: 627
Front: 69	Right: 612	Left: 632
Front: 59	Right: 641	Left: 598
Front: 89	Right: 646	Left: 603
Front: 59	Right: 623	Left: 623
Front: 118	Right: 632	Left: 653
Front: 64	Right: 640	Left: 602
Front: 73	Right: 668	Left: 595
Front: 68	Right: 627	Left: 626
Front: 82	Right: 596	Left: 651
Front: 83	Right: 565	Left: 658
Front: 79	Right: 593	Left: 648
Front: 68	Right: 623	Left: 627
Front: 70	Right: 665	Left: 604
Front: 98	Right: 649	Left: 582
Front: 69	Right: 641	Left: 612
Front: 118	Right: 603	Left: 647
Front: 80	Right: 583	Left: 652
Front: 81	Right: 614	Left: 640
Front: 76	Right: 644	Left: 601
Front: 77	Right: 650	Left: 695
Front: 79	Right: 657	Left: 604
Front: 77	Right: 651	Left: 596
Front: 80	Right: 636	Left: 621
Front: 90	Right: 602	Left: 644
Front: 90	Right: 580	Left: 649
Front: 95	Right: 614	Left: 642
Front: 90	Right: 636	Left: 615
Front: 87	Right: 704	Left: 608
Front: 95	Right: 613	Left: 635
Front: 103	Right: 668	Left: 645
Front: 103	Right: 603	Left: 646
Front: 111	Right: 549	Left: 652
Front: 107	Right: 625	Left: 655
Front: 99	Right: 648	Left: 597
Front: 99	Right: 654	Left: 684
Front: 107	Right: 650	Left: 588
Front: 107	Right: 659	Left: 588
Front: 116	Right: 648	Left: 618
Front: 124	Right: 609	Left: 640
Front: 124	Right: 613	Left: 648
Front: 123	Right: 628	Left: 635
Front: 131	Right: 660	Left: 604
Front: 131	Right: 656	Left: 598
Front: 140	Right: 637	Left: 627
Front: 140	Right: 590	Left: 655
Front: 146	Right: 558	Left: 660
Front: 154	Right: 649	Left: 658
Front: 156	Right: 614	Left: 623
Front: 158	Right: 643	Left: 619
Front: 161	Right: 652	Left: 149
Front: 170	Right: 645	Left: 346
Front: 180	Right: 662	Left: 617
Front: 183	Right: 553	Left: 662
Front: 190	Right: 513	Left: 658
Front: 200	Right: 535	Left: 121
Front: 214	Right: 572	Left: 71
Front: 226	Right: 602	Left: 150
Front: 236	Right: 651	Left: 65
Front: 249	Right: 596	Left: 82
Front: 260	Right: 571	Left: 78
Front: 285	Right: 589	Left: 68
Front: 296	Right: 627	Left: 65
Front: 314	Right: 644	Left: 141
Front: 348	Right: 627	Left: 65
Front: 378	Right: 626	Left: 65
Front: 392	Right: 523	Left: 65
Front: 393	Right: 306	Left: 112
Front: 234	Right: 606	Left: 384
Front: 157	Right: 650	Left: 361
Front: 137	Right: 659	Left: 295
Front: 129	Right: 666	Left: 211
Front: 103	Right: 662	Left: 102
Front: 68	Right: 636	Left: 49
Front: 77	Right: 538	Left: 52
Front: 97	Right: 490	Left: 69
Front: 91	Right: 459	Left: 56
Front: 86	Right: 488	Left: 85
Front: 82	Right: 532	Left: 658
Front: 77	Right: 565	Left: 74
Front: 84	Right: 591	Left: 57
Front: 144	Right: 611	Left: 140
Front: 154	Right: 640	Left: 85
Front: 148	Right: 661	Left: 70
Front: 82	Right: 660	Left: 56
Front: 101	Right: 624	Left: 67
Front: 97	Right: 529	Left: 149
Front: 98	Right: 459	Left: 177
Front: 106	Right: 516	Left: 127
Front: 107	Right: 491	Left: 68
Front: 106	Right: 531	Left: 43
Front: 99	Right: 565	Left: 91
Front: 110	Right: 587	Left: 159
Front: 182	Right: 607	Left: 244
Front: 189	Right: 641	Left: 329
Front: 183	Right: 665	Left: 281
Front: 123	Right: 652	Left: 184
Front: 132	Right: 660	Left: 77
Front: 132	Right: 642	Left: 44
Front: 136	Right: 517	Left: 77
Front: 175	Right: 434	Left: 81
Front: 140	Right: 422	Left: 87
Front: 153	Right: 460	Left: 56
Front: 174	Right: 523	Left: 694
Front: 177	Right: 531	Left: 507
Front: 184	Right: 551	Left: 193
Front: 190	Right: 543	Left: 101
Front: 199	Right: 562	Left: 61
Front: 202	Right: 584	Left: 73
Front: 188	Right: 606	Left: 90
Front: 182	Right: 632	Left: 97
Front: 211	Right: 662	Left: 88
Front: 252	Right: 663	Left: 69
Front: 277	Right: 726	Left: 56
Front: 297	Right: 561	Left: 117
Front: 315	Right: 478	Left: 133
Front: 338	Right: 483	Left: 102
Front: 390	Right: 517	Left: 63
Front: 467	Right: 424	Left: 107
Front: 349	Right: 479	Left: 252
Front: 269	Right: 582	Left: 319
Front: 297	Right: 635	Left: 297
Front: 239	Right: 660	Left: 320
Front: 183	Right: 574	Left: 357
Front: 144	Right: 502	Left: 350
Front: 79	Right: 490	Left: 108
Front: 38	Right: 501	Left: 107
Front: 42	Right: 468	Left: 531
Front: 89	Right: 416	Left: 376
Front: 115	Right: 413	Left: 378
Front: 75	Right: 443	Left: 432
Front: 51	Right: 440	Left: 423
Front: 115	Right: 544	Left: 440
Front: 207	Right: 660	Left: 150
Front: 176	Right: 542	Left: 65
Front: 188	Right: 459	Left: 78
Front: 187	Right: 470	Left: 514
Front: 158	Right: 515	Left: 524
Front: 248	Right: 553	Left: 575
Front: 178	Right: 661	Left: 696
Front: 109	Right: 616	Left: 573
Front: 108	Right: 623	Left: 576
Front: 123	Right: 606	Left: 607
Front: 215	Right: 525	Left: 715
Front: 192	Right: 543	Left: 644
Front: 116	Right: 574	Left: 621
Front: 98	Right: 648	Left: 610
Front: 98	Right: 610	Left: 588
Front: 106	Right: 579	Left: 624
Front: 124	Right: 552	Left: 641
Front: 119	Right: 572	Left: 633
Front: 167	Right: 598	Left: 602
Front: 84	Right: 624	Left: 549
Front: 65	Right: 638	Left: 538
Front: 109	Right: 634	Left: 585
Front: 129	Right: 597	Left: 604
Front: 144	Right: 564	Left: 627
Front: 141	Right: 576	Left: 624
Front: 147	Right: 610	Left: 592
Front: 149	Right: 623	Left: 587
Front: 153	Right: 561	Left: 643
Front: 162	Right: 565	Left: 660
Front: 194	Right: 583	Left: 629
Front: 188	Right: 612	Left: 598
Front: 179	Right: 619	Left: 607
Front: 52	Right: 581	Left: 626
Front: 130	Right: 559	Left: 642
Front: 50	Right: 574	Left: 639
Front: 90	Right: 635	Left: 606
Front: 87	Right: 615	Left: 595
Front: 62	Right: 629	Left: 630
Front: 58	Right: 560	Left: 647
Front: 43	Right: 583	Left: 634
Front: 84	Right: 617	Left: 587
Front: 76	Right: 621	Left: 595
Front: 84	Right: 640	Left: 663
Front: 49	Right: 4	Left: 460
Front: 228	Right: 12	Left: 82
Front: 183	Right: 4	Left: 87
Front: 146	Right: 3	Left: 148
Front: 131	Right: 6	Left: 94
Front: 144	Right: 6	Left: 69
Front: 90	Right: 75	Left: 143
Front: 7	Right: 3	Left: 74
Front: 3	Right: 9	Left: 98
Front: 4	Right: 3	Left: 97
Front: 4	Right: 4	Left: 114
Front: 37	Right: 4	Left: 112
Front: 22	Right: 4	Left: 128
Front: 26	Right: 5	Left: 133
Front: 21	Right: 3	Left: 141
Front: 29	Right: 67	Left: 149
Front: 36	Right: 6	Left: 166
Front: 22	Right: 2	Left: 178
Front: 35	Right: 72	Left: 177
Front: 26	Right: 3	Left: 179
Front: 21	Right: 3	Left: 173
Front: 17	Right: 3	Left: 239
Front: 27	Right: 5	Left: 265
Front: 10	Right: 4	Left: 167
Front: 7	Right: 6	Left: 183
Front: 13	Right: 3	Left: 210
Front: 6	Right: 4	Left: 234
Front: 25	Right: 6	Left: 220
Front: 4	Right: 4	Left: 227
Front: 4	Right: 4	Left: 220
Front: 4	Right: 4	Left: 225
Front: 10	Right: 5	Left: 223
Front: 6	Right: 3	Left: 220
Front: 5	Right: 37	Left: 345
Front: 8	Right: 4	Left: 220
Front: 85	Right: 4	Left: 231
Front: 10	Right: 4	Left: 257
Front: 3	Right: 45	Left: 216
Front: 8	Right: 6	Left: 229
Front: 6	Right: 3	Left: 315
Front: 2	Right: 5	Left: 217
Front: 10	Right: 3	Left: 216
Front: 22	Right: 3	Left: 221
Front: 9	Right: 22	Left: 204
Front: 6	Right: 3	Left: 199
Front: 4	Right: 5	Left: 184
Front: 4	Right: 4	Left: 267
Front: 7	Right: 3	Left: 178
Front: 4	Right: 3	Left: 179
Front: 3	Right: 3	Left: 178
Front: 4	Right: 3	Left: 157
Front: 5	Right: 4	Left: 161
Front: 56	Right: 9	Left: 133
Front: 4	Right: 92	Left: 155
Front: 4	Right: 6	Left: 169
Front: 17	Right: 3	Left: 229
Front: 4	Right: 7	Left: 216
Front: 3	Right: 4	Left: 211
Front: 4	Right: 3	Left: 177
Front: 3	Right: 4	Left: 167
Front: 4	Right: 5	Left: 146
Front: 3	Right: 3	Left: 81
Front: 6	Right: 3	Left: 106
Front: 27	Right: 7	Left: 57
Front: 3	Right: 3	Left: 28
Front: 4	Right: 3	Left: 27
Front: 7	Right: 28	Left: 26
Front: 4	Right: 4	Left: 14
Front: 7	Right: 22	Left: 16
Front: 5	Right: 3	Left: 19
Front: 3	Right: 3	Left: 4
Front: 6	Right: 4	Left: 10
Front: 3	Right: 5	Left: 56
Front: 6	Right: 3	Left: 46
Front: 4	Right: 5	Left: 39
Front: 48	Right: 4	Left: 37
Front: 4	Right: 4	Left: 34
Front: 4	Right: 4	Left: 100
Front: 4	Right: 7	Left: 63
Front: 28	Right: 5	Left: 98
Front: 5	Right: 9	Left: 17
Front: 3	Right: 6	Left: 30
Front: 4	Right: 3	Left: 53
Front: 4	Right: 3	Left: 96
Front: 7	Right: 3	Left: 86
Front: 4	Right: 6	Left: 73
Front: 4	Right: 3	Left: 97
Front: 20	Right: 17	Left: 64
Front: 4	Right: 3	Left: 60
Front: 4	Right: 4	Left: 138
Front: 4	Right: 3	Left: 60
Front: 6	Right: 3	Left: 61
Front: 4	Right: 54	Left: 56
Front: 3	Right: 14	Left: 62
Front: 34	Right: 3	Left: 39
Front: 2	Right: 3	Left: 20
Front: 8	Right: 7	Left: 48
Front: 4	Right: 4	Left: 46
Front: 4	Right: 4	Left: 6
Front: 3	Right: 65	Left: 4
Front: 3	Right: 7	Left: 5
Front: 17	Right: 26	Left: 4
Front: 37	Right: 46	Left: 52
Front: 80	Right: 63	Left: 61
Front: 4	Right: 61	Left: 72
Front: 4	Right: 57	Left: 34
Front: 3	Right: 164	Left: 80
Front: 43	Right: 59	Left: 39
Front: 72	Right: 68	Left: 12
Front: 51	Right: 85	Left: 4
Front: 13	Right: 90	Left: 4
Front: 76	Right: 103	Left: 4
Front: 4	Right: 98	Left: 4
Front: 6	Right: 115	Left: 4
Front: 8	Right: 126	Left: 4
Front: 4	Right: 140	Left: 6
Front: 20	Right: 157	Left: 4
Front: 3	Right: 161	Left: 4
Front: 3	Right: 135	Left: 4
Front: 4	Right: 112	Left: 3
Front: 6	Right: 103	Left: 39
Front: 17	Right: 156	Left: 41
Front: 19	Right: 103	Left: 22
Front: 19	Right: 105	Left: 7
Front: 6	Right: 142	Left: 8
Front: 4	Right: 107	Left: 9
Front: 58	Right: 107	Left: 24
Front: 5	Right: 107	Left: 4
Front: 3	Right: 107	Left: 31
Front: 4	Right: 124	Left: 5
Front: 3	Right: 106	Left: 4
Front: 32	Right: 98	Left: 5
^C2018-05-28 04:09:51 sigHandler: Unhandled signal 2, terminating

pi@raspberrypi:~/E101/LibE101 $ nano tester.cpp
pi@raspberrypi:~/E101/LibE101 $ nano tester.cpp

  GNU nano 2.2.6                                                      File: tester.cpp                                                                                                                    

#include <stdio.h>
#include <time.h>
#include "E101.h"
int main(){
        init();

                // gate closed
                char ip [15] = "130.195.6.196";
                int port = 1024;
                connect_to_server(ip, port); // connects to the gate server

                char message [24] = "Please";
                send_to_server(message); // requests password


                //char message [24]; // init variable to store password
                receive_from_server(message);
                send_to_server(message); // sends password to server
                // gate opens

                printf("Gate opened \n");

                //set_motor(1,60);
                //sleep1(1,0);

                //printf("Hi Emma  \n");

                //int row  = 1;
                //double weight = -160;
                //double  total = 0;  //biggest possible total 12880 or -12880

                int picCount = 0;
                //take_picture();

                bool quad2 = false;
                bool quad3 = false;
                bool quad4 = false;

                //int warning = 0;

                //display_picture(5,0);
                while (picCount < 3000)
                {
                        set_motor(1, 42);  //left motor
                        set_motor(2, 42); //right motor 

                        int row = 1;
                        double weight = -160;
                        double total = 0;
                        double numWhite = 0;

                        //sleep1(1,0);
                        take_picture();
                        while (row<320)
                        {
                                int red = get_pixel(120, row, 0); //row is 240 down, column is 320 sideways
                                int green = get_pixel(120, row, 1);
                                int blue = get_pixel(120, row, 2);

                                int white = get_pixel(120, row, 3);

                                //printf("Pixel Number %d: ", row);

                                if(white>100)
                                {
                                        //printf("White \t");
                                        total = total+weight;
                                        numWhite = numWhite +1;
                                }
                                if((red>100) && (green<80) && (blue<80))
                                {
                                        printf("FUCK");
                                        row = 321; //if you see red stop the while loops
                                        picCount = 3001;
                                        set_motor(2,0);
                                         sleep1(0,100000);
                                        numWhite = 150; //set other variables to a medium
                                        total =0;
                                }

                                //else
                                //{
                                        //printf("Black \t");
                                //}

                                //printf("Red:  %d, \t", red);
                                //printf("Green:  %d, \t", green);
                                //printf("Blue:  %d \n", blue);

                                row++;
                                //weight++;
                                weight = weight + 1;
                        }

                        //printf("Total: %f \n", total);
                        //printf("White pixel: %f \n", numWhite);

                        if(numWhite>290) //if there is an intersection turn left
                        {
                                if (quad3)
                                {
                                //set_motor(1,0);
                                        //set_motor(2,0);
                                        //sleep1(0,100000);
                                        //set_motor(1,-40);
                                        //set_motor(2, 40);
                                        //sleep1(1,0);
                                        printf("Intersection\n");
                                        //set_motor(1,0);
                                        set_motor(1,0);
                                        sleep1(0,200000);
                                }
                                else
                                {
                                        printf("First time\n");
                                        sleep1(2,0); //walk past first intersection
                                        quad3 = true; //quad 3 starts now 
                                }

                        }

                        else if(numWhite<1) //if nothing keep turning left until you see something  (for q3)
                        {
                                printf("All Black\n");
                                //above is for q2
                                set_motor(1,0);
                                set_motor(2,0);
                                 sleep1(1,0);
                                set_motor(1,-42);
                                set_motor(2,42);
                                sleep1(1,350000);
                                set_motor(1,0);
                                set_motor(2,0);
                                sleep1(1,0);

                                
                                //set_motor(2,-42);
                                //sleep1(0,100000);

                        }

                        else
                        {
                                if (total<-1800)
                                {
                                        set_motor(1,0);
                                        sleep1(0,100000);
                                }
                                else if (total>1800)
                                {
                                        set_motor(2,0);
                                        sleep1(0,100000);
                                }
}

                        //else if (total>=-1000) && (total<=1000))

                        //sleep1(0,100000);
                        picCount++;


                }
                set_motor(1,0);
                set_motor(2,0);

                sleep1(1,0);

                printf("Next quad \n");

        int maxValue = 0;
        int i = 0;
        int front_reading[2000];
        int right_reading[2000];
        int left_reading[2000];
        
                
        set_motor(1,42);
        set_motor(2,42);
        sleep1(0,700000);

 for (i=0; i<2000; i++)
        {
                set_motor(1,42);
                set_motor(2,42);

                front_reading[i] = read_analog(1);
                right_reading[i] = read_analog(0);
                left_reading[i] = read_analog(7);

                printf("Front: %d\t", front_reading[i]);
                printf("Right: %d\t", right_reading[i]);
                printf("Left: %d\n", left_reading[i]);

                //if(right_reading[i]>655)
                //{
                //        set_motor(1,0);
                //        sleep1(0,150000);
                //}
                //else if(left_reading[i]>655)
                //{
                //        set_motor(2,0);
                //        sleep1(0,150000);
                //}
                if(left_reading[i]<300) //if there is heaps of space on left sensor rely on right sensor
                {

{
                        if(right_reading[i]>600)
                        {
                                set_motor(1,0);
                                sleep1(0,100000);
                        }
                        else
                        {
                                set_motor(2,0);
                                sleep1(0,100000);
                        }

                }
                else if(left_reading[i]<300) //if there is heaps of space on right sensor rely on left sensor

                {
                        if(left_reading[i]<600)
                        {
                                set_motor(1,0);
                                sleep1(0,100000);
                        }
                        else
                        {
                                set_motor(2,0);
                                sleep1(0,100000);
                        }
                }
 else
                {
                        if(right_reading[i]>left_reading[i]) //if everything is alg stabalise itself
                        {
                                set_motor(1,0);
                                sleep1(0,100000);
                        }
                        else
                        {
                                set_motor(2,0);
                                sleep1(0,100000);
                        }
                }
                
                if(front_reading[i]>380)
                {
                        set_motor(1,-42);
                        set_motor(2,42);
                        sleep1(0, 250000);
                }


        }

                        //sleep1(1,0);
                set_motor(1,0);

       set_motor(2,0);
                return 0;
        }

